<!DOCTYPE html>
<html lang="en">

<head>
    <title>福娃糙米</title>
    <link rel="stylesheet" type="text/css" href="/css/trace.css">
    <style type="text/css">
	    .map {
	    	width: 100%;
	    }
    	.circle {
    		width: 80px;
    		height: 80px;
    		line-height: 80px;
    	}
    </style>
</head>
<body>
    <% include ../base.ejs %>
    <div id="page-wrapper">
        <div class="row">
            <div class="col-lg-12">
                <h3 class="page-header">真实性溯源</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="trace">
                    	<div class="control">
							<form class="form-inline">
								<div class="form-group">
									<select class="form-control" id="seed_num">
										<option value="">请输入种子编号</option>
										<% for(var i = 0;i < seed.length;i++) { %>
											<option value="<%=seed[i].seedid%>"><%=seed[i].seedid%></option>
										<% } %>
									</select>
								</div>
								<div class="form-group">
									<select class="form-control" id="product_num">
										<option value="">请输入产品编号</option>
										<% for(var i = 0;i < product.length;i++) { %>
											<option value="<%=product[i].productid%>"><%=product[i].productid%></option>
										<% } %>
									</select>
								</div>
								<button type="submit" class="btn btn-default" id="run_trace">开始溯源</button>
								<input type="reset" class="btn btn-default" />
							</form>
                    	</div>
                    	<div class="maparea">
	                    	<!-- <canvas id="canvas" width="1000" height="650">
	                    		Your browser does not support the canvas element.
	                    	</canvas> -->
	                    	<div class="map"></div>
	                    	<div class="circle-info">sda</div>
                    	</div>
                    </div>

                </div>
            </div>
        </div>
        <div class="contextmenu">
        	<ul>
        		<h5>是否有问题</h5>
        		<li><a href="javascript:;">有问题</a></li>
        		<li><a href="javascript:;">没问题</a></li>
        	</ul>
        </div>
        
    </div>
<script type="text/javascript">
	function ajax(method, url, data, cb) {
		var xhr;
		if(window.XMLHttpRequest) {
			xhr = new XMLHttpRequest();
		}else {
			xhr = new ActiveXObject("Microsoft.XMLHTTP");
		}

		xhr.onreadystatechange = function() {
			if(xhr.readyState == 4 && xhr.status == 200) {
				cb(xhr.responseText);
			}
		}
		xhr.open(method, url);
		xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
		var str = [];
		for(var key in data) {
			str.push(key + "=" + data[key]);
		}
		xhr.send(str.join("&"));
	}

	var product = document.querySelector("#product_num"),
		seed = document.querySelector("#seed_num"),
		trace = document.querySelector("#run_trace");

	var transformKey = {
		seedid: "种子",
		seedlingid: "秧苗",
		plantid: "种植",
		inputid: "入库",
		warehouseid: "仓库",
		feedid: "进料",
		materialid: "原料",
		productid: "产品"
	};


	trace.addEventListener('click', function(e) {
		e.preventDefault();
		map.innerHTML = "";
		Circle.prototype.init();

		ajax('post', '/trace/trace', {
			kind: seed.value != "" ? 'seed' : 'product',
			code: seed.value != "" ? seed.value : product.value
		}, function(data) {
			var json = JSON.parse(data);
			console.log(json.data)
			if(json.code == 1) {
				json.data.map(function(item) {
					for(var key in item) {
						var elem = new Circle({
							name: transformKey[key],
							code: item[key]
						});
						elem.pool.push(elem)
					}
					Circle.prototype.addLine();
				});
				// new Path(pool[0], pool[1])
			}
			

		})
	})
</script>
	

<script>
	var map = document.querySelector(".map");
	var menu = document.querySelector(".contextmenu");
	var infodiv = document.querySelector(".circle-info");

	map.addEventListener('contextmenu', function(e) {
		e.preventDefault();

		console.log(e.target)
		if(e.target.className == 'circle') {
			menu.style.left = e.clientX + 'px';
			menu.style.top = e.clientY + 'px';
			menu.style.visibility = 'visible';
		}
	});

	map.addEventListener('click', function(e) {
		e.preventDefault();

		if(e.target.className == 'circle') {
			infodiv.style.left = e.target.offsetLeft - 60 + 'px';
			infodiv.style.top = e.target.offsetTop + 95 + 'px';
			infodiv.style.visibility = 'visible';
		}else {
			infodiv.style.visibility = 'hidden';
		}
	});

	document.addEventListener('click', function() {
		menu.style.visibility = 'hidden';
	});

	function Circle(data) {
		this.x = this.accumulate.x;
		this.y = this.accumulate.y;

		this.name = data.name;
		this.code = data.code;

		this.create(data)	
	}
	Circle.prototype.init = function() {
		console.log("init")
		this.accumulate = {
			x: 100,
			y: 80
		};
		this.storePath = {
			start: null
		};
		this.pool = [];
	};
	Circle.prototype.addLine = function() {
		console.log("addLine")
		this.accumulate = {
			x: 100,
			y: this.accumulate.y += 150
		};
	};
	Circle.prototype.accumulate = {
		x: 100,
		y: 100
	};
	Circle.prototype.pool = [];
	Circle.prototype.create = function(data) {

		var elem = null;
		var hasElem = this.pool.some(function(item, index) {
			if(item.name == data.name && item.code == data.code) {
				elem = item;
				return true;
			}
		});

		if(!hasElem) {
			var circle = document.createElement("div");
			circle.className = "circle";
			this.accumulate.x = this.accumulate.x + 150;
			circle.style.left = this.x + "px";
			circle.style.top = this.y + "px";
			circle.title = "id: " + data.code;
			circle.innerHTML = data.name;
			map.appendChild(circle);

			if(this.storePath.start == null) {
				this.storePath.start = this;
			}else {
				new Path(this.storePath.start, this);
				this.storePath.start = this;
			}
		}else {
			Circle.prototype.accumulate.x += 150;
			Circle.prototype.storePath.start = elem;
			console.log(Circle.prototype.storePath.start)
		}
	};
	Circle.prototype.storePath = {
		start: null
	}


	function Path(start, end) {
		this.start = start;
		this.end = end;

		this.create(start, end);
	}
	Path.prototype.create = function(start, end) {
		var path = document.createElement("span");
		path.className = "path";

		var deg = (end.y  - start.y) / (end.x - start.x);

		path.style.width = Math.hypot(end.y - start.y, end.x - start.x) - 80 + 'px';
		path.style.left = start.x + 40 + 'px';
		path.style.top = start.y + 40 + 'px';

		path.style.transform = "rotate(" + Math.atan(deg) * 180 / Math.PI + "deg)" + 
								"translate(40px, 0px)";
		path.style.transformOrigin = "0 0";
		
		map.appendChild(path)
	}

</script>


</body>
</html>